{
    "compilerOptions": {
        "target": "es2019" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "module": "commonjs" /* Specify what module code is generated. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "strict": true /* Enable all strict type-checking options. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */,
        "outDir": "./dist",
        "resolveJsonModule": true,
        "sourceMap": true /* Enables the generation of source map files. These files are incredibly useful for debugging because they allow you to trace compiled code back to your original source code. */,
        "moduleResolution": "node" /* It's typically set to "node" for Node.js projects to mimic how Node.js resolves modules.*/,
        "allowSyntheticDefaultImports": true /* allows you to import modules as if they had a default export, even when they don't. */,
        "allowJs": true /* If you are migrating a JavaScript project to TypeScript gradually and have a mix of .js and .ts files. */
    },
    "exclude": ["node_modules", "**/*.test.ts", "dist"]
}
